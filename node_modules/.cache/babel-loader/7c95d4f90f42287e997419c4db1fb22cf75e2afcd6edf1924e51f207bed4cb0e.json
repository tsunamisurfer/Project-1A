{"ast":null,"code":"var _jsxFileName = \"/home/medusa/Documents/React-Router-Movies/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SavedList from './Movies/SavedList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [saved, setSaved] = useState([]); // Stretch: the ids of \"saved\" movies\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const getMovies = () => {\n      axios.get('http://localhost:5001/api/movies') // Study this endpoint with Postman\n      .then(response => {\n        // Study this response with a breakpoint or log statements\n        // and set the response data as the 'movies' slice of state\n      }).catch(error => {\n        console.error('Server Error', error);\n      });\n    };\n    getMovies();\n  }, []);\n  const addToSavedList = id => {\n    // This is stretch. Prevent the same movie from being \"saved\" more than once\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SavedList, {\n      list: [/* This is stretch */]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Replace this Div with your Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4KmEiejgJEClswcpxwDOPQz8xrE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SavedList","jsxDEV","_jsxDEV","App","_s","saved","setSaved","movies","setMovies","getMovies","get","then","response","catch","error","console","addToSavedList","id","children","list","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/medusa/Documents/React-Router-Movies/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport SavedList from './Movies/SavedList';\n\nexport default function App () {\n  const [saved, setSaved] = useState([]); // Stretch: the ids of \"saved\" movies\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = () => {\n      axios\n        .get('http://localhost:5001/api/movies') // Study this endpoint with Postman\n        .then(response => {\n          // Study this response with a breakpoint or log statements\n          // and set the response data as the 'movies' slice of state\n        })\n        .catch(error => {\n          console.error('Server Error', error);\n        });\n    }\n    getMovies();\n  }, []);\n\n  const addToSavedList = id => {\n    // This is stretch. Prevent the same movie from being \"saved\" more than once\n  };\n\n  return (\n    <div>\n      <SavedList list={[ /* This is stretch */]} />\n\n      <div>Replace this Div with your Routes</div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,GAAGA,CAAA,EAAI;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGA,CAAA,KAAM;MACtBV,KAAK,CACFW,GAAG,CAAC,kCAAkC,CAAC,CAAC;MAAA,CACxCC,IAAI,CAACC,QAAQ,IAAI;QAChB;QACA;MAAA,CACD,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;IACN,CAAC;IACDL,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAGC,EAAE,IAAI;IAC3B;EAAA,CACD;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACF,SAAS;MAACmB,IAAI,EAAE,CAAE;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAE7CrB,OAAA;MAAAgB,QAAA,EAAK;IAAiC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV;AAACnB,EAAA,CA9BuBD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}